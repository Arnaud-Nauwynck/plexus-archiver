<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="34" tokens="104">
<file line="33" path="/Users/kama/ws-git-plexus/plexus-archiver/target/checkout/src/main/java/org/codehaus/plexus/archiver/bzip2/BZip2Archiver.java"/>
<file line="33" path="/Users/kama/ws-git-plexus/plexus-archiver/target/checkout/src/main/java/org/codehaus/plexus/archiver/snappy/SnappyArchiver.java"/>
<codefragment>
<![CDATA[
    private SnappyCompressor compressor = new SnappyCompressor();
    
    public void execute()
        throws ArchiverException, IOException
    {
        if ( !checkForced() )
        {
            return;
        }

        ResourceIterator iter = getResources();
        ArchiveEntry entry = iter.next();
        if ( iter.hasNext() )
        {
            throw new ArchiverException( "There is more than one file in input." );
        }
        compressor.setSource( entry.getResource() );
        compressor.setDestFile( getDestFile() );
        compressor.compress();
    }

    public boolean isSupportingForced()
    {
        return true;
    }

    protected void close()
    {
        compressor.close();
    }

    protected String getArchiveType()
    {
        return "snappy";
]]>
</codefragment>
</duplication>
<duplication lines="32" tokens="101">
<file line="35" path="/Users/kama/ws-git-plexus/plexus-archiver/target/checkout/src/main/java/org/codehaus/plexus/archiver/bzip2/BZip2Archiver.java"/>
<file line="35" path="/Users/kama/ws-git-plexus/plexus-archiver/target/checkout/src/main/java/org/codehaus/plexus/archiver/gzip/GZipArchiver.java"/>
<codefragment>
<![CDATA[
    protected void execute()
        throws ArchiverException, IOException
    {
        if ( !checkForced() )
        {
            return;
        }

        ResourceIterator iter = getResources();
        ArchiveEntry entry = iter.next();
        if ( iter.hasNext() )
        {
            throw new ArchiverException( "There is more than one file in input." );
        }
        compressor.setSource( entry.getResource() );
        compressor.setDestFile( getDestFile() );
        compressor.compress();
    }

    public boolean isSupportingForced()
    {
        return true;
    }

    protected void close()
    {
        compressor.close();
    }

    protected String getArchiveType()
    {
        return "gzip";
]]>
</codefragment>
</duplication>
</pmd-cpd>